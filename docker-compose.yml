---
version: '3.4'

x-common:
  &common
  image: apache/airflow:2.5.0
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock
    - ./dbt:/dbt

x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    postgres-dbt:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

volumes:
  postgres_data:


services:
  postgres:
    image: postgres:13
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    env_file:
      - .env

  postgres-dbt:
    image: postgres:13
    container_name: postgres-dbt
    environment:
      POSTGRES_PASSWORD: pssd
      POSTGRES_USER: dbtuser
      POSTGRES_DB: dbtdb
      DBT_SCHEMA: dbtdb
      DBT_RAW_DATA_SCHEMA: dbt_raw_data
    ports:
      - "5435:5432"
    expose:
      - 5432
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "dbtuser" ]
      interval: 5s
      retries: 5
    volumes:
      - ./sample_data:/sample_data

  scheduler:
    <<: *common
    <<: *depends-on
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: *common
    <<: *depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "http://localhost:8080/health"
        ]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version

  adminer:
    <<: *depends-on
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - "8082:8080"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8082" ]
      interval: 30s
      timeout: 30s
      retries: 5

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
